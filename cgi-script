#!/bin/bash
set -ue

IFSBAK="$IFS"

function ...() { 
    local ln
    while IFS='' read -r ln; do printf "%s\n" "$ln"; done
    if [ -n "$ln" ]; then printf "%s" "$ln"; fi
}

declare -A POST COOKIES
function parse_cookies() {
    local -a cookies=( )
    local cookie
    IFS="; " cookies=( ${HTTP_COOKIE-;} ) IFS="$IFSBAK"
    for cookie in "${cookies[@]}"; do
        case "$cookie" in
            *=*) COOKIES["${cookie%%=*}"]="${cookie#*=}";;
        esac
    done
}
function read_input() {
    local input="$(...)" assoc val
    local -a vars=( )
    case "$CONTENT_TYPE" in
        'multipart/form-data'*)
            local delim="--${CONTENT_TYPE#*boundary=}" part headers data
            input="${input#*$delim}"
            while [[ -n "$input" && "${input:0:2}" != -- ]]; do
                part="${input%%$delim*}"
                input="${input#$part}"
                input="${input#$delim}"
                headers="${part%%$'\r\n\r\n'*}"
                data="${part#*$'\r\n\r\n'}"
                data="${data//$'\r\n'/$'\n'}"
                postName="${headers#* name=\"}"
                postName="${postName%%\"*}"
                POST[$postName]="${data%$'\n'}"
            done
            ;;
        *)
            local delim=$'\r\n\r\n'
            IFS='&' vars=( '.=.' ${input#*$delim} ) IFS="$IFSBAK"
            for assoc in "${vars[@]}"; do
                val="${assoc#*=}"
                val="${val//+/ }"
	        POST[${assoc%%=*}]="$(echo -e "${val//%/\\x}")"
            done
            ;;
    esac
}
[ "$REQUEST_METHOD" == POST ] && read_input
parse_cookies

declare -A INCLUDES=( )
function include() {
    local dep CURRENT_INCLUDE
    for dep; do
        [ "${INCLUDES[$dep]:+x}" == x ] || { 
	    CURRENT_INCLUDE="$dep"
	    source "lib/$dep.shl" || {
		if [ ! -e "lib/$dep.shl" ]; then
		    git pull origin plugin/"$dep" >&2
		fi
		source "lib/$dep.shl"
	    }
            INCLUDES[$dep]=included
        }
    done
}

function plugin-vars() {
    if source "etc/$CURRENT_INCLUDE.conf"; then :; else
	mkdir -p "$(dirname "etc/$CURRENT_INCLUDE.conf")"
	local var i=0 ind 
	for var; do
	    ind=var_$i
	    vtype=string
	    case "$var" in
		*=\(*\[*\]=*\)|*=\(\[\]\)) vtype=hashmap;;
		*=\(*\)) vtype=array;;
	    esac
	    if [ "${POST[plugin-name]:-}" == "$CURRENT_INCLUDE" ]; then
		case "$vtype" in
		    string) echo "${var%%=*}=${POST[$ind]}";;
		    array)  echo "declare -ga ${var%%=*}; ${var%%=*}=( ${POST[$ind]} )";;
		    hashmap) echo "declare -gA ${var%%=*}; ${var%%=*}=( ${POST[$ind]} )";;
		esac >> "etc/$CURRENT_INCLUDE.conf"
	    else
		local default="${var#*=}"
		default="${default#\(}"
		default="${default%\)}"
		tr :: td text "${vtype^} ${var%%=*}" :: td with input text "$ind" "$default"
	    fi
	    ((i++)) || :
	done | if [ "${POST[plugin-name]:-}" == "$CURRENT_INCLUDE" ]; then :
	else
	    header Content-type text/html
	    echo
	    
	    {
		input hidden "plugin-name" "$CURRENT_INCLUDE"
		table ...
		submit "Configurer le plugin $CURRENT_INCLUDE"
	    } | html :: head :: body with name="$CURRENT_INCLUDE" method=POST tag form ...
	    exit
	fi
	source "etc/$CURRENT_INCLUDE.conf"
    fi
}

source "$1"
